setwd("/home/getalp/garnerim/Bureau/scripts/turn_by_spk_csv")
#install.packages("scales")
library(scales)
#install.packages("dplyr")
library(dplyr)
library(ggplot2)
library(readr)
library(readr)
speakers <- read_delim("turns_wtht_zero.csv", ";",
escape_double = FALSE,
col_types = cols(gender = col_factor(levels = c("male", "female")),
id_speaker = col_character()),
trim_ws = TRUE)
spk_all<-subset(speakers,speakers$all>0,select=c("id_speaker","gender","all"))
View(speakers)
View(speakers)
spk_all<-subset(speakers,speakers$all>0,select=c("id_speaker","gender","all"))
ggplot(spk_all,aes(x=spk_all$all,fill=spk_all$gender))+
geom_histogram(alpha=0.75,position="identity",binwidth = 5)+
labs(title="Turn count per speaker",x="Number of turns",y="Frequency",fill="Gender")
ggplot(spk_all,aes(x=spk_all$all,fill=spk_all$gender))+
geom_histogram(alpha=0.75,position="identity",binwidth = 5)+
coord_cartesian(xlim=c(0,500),ylim=c(0,2000))+
labs(title="Turn count per speaker (<500)",x="Number of turns",y="Frequency",fill="Gender")
ggplot(spk_all100,aes(x=spk_all100$all,fill=spk_all100$gender))+
geom_histogram(alpha=0.75,position="identity",binwidth = 1)+
coord_cartesian(xlim=c(0,75),ylim=c(0,100))+
labs(title="Turn count per speaker (10<x<100)",x="Number of turns",y="Frequency",fill="Gender")
spk_all100<-subset(spk_all,spk_all$all<100)
ggplot(spk_all100,aes(x=spk_all100$all,fill=spk_all100$gender))+
geom_histogram(alpha=0.75,position="identity",binwidth = 1)+
coord_cartesian(xlim=c(0,100),ylim=c(0,1000))+
labs(title="Turn count per speaker (<100)",x="Number of turns",y="Frequency",fill="Gender")
ggplot(spk_all,aes(x=spk_all$all,fill=spk_all$gender))+
geom_histogram(alpha=0.75,position="identity",binwidth = 5)+
coord_cartesian(xlim=c(100,300),ylim=c(0,5))+
labs(title="Turn count per speaker (100<x<300)",x="Number of turns",y="Frequency",fill="Gender")
coord_cartesian(xlim=c(100,300)+
ggplot(spk_all,aes(x=spk_all$all,fill=spk_all$gender))+
geom_histogram(alpha=0.75,position="identity",binwidth = 5)+
coord_cartesian(xlim=c(100,300))+
labs(title="Turn count per speaker (100<x<300)",x="Number of turns",y="Frequency",fill="Gender")
)
ggplot(spk_all,aes(x=spk_all$all,fill=spk_all$gender))+
geom_histogram(alpha=0.75,position="identity",binwidth = 5)+
coord_cartesian(xlim=c(100,300))+
labs(title="Turn count per speaker (100<x<300)",x="Number of turns",y="Frequency",fill="Gender")
ggplot(spk_all,aes(x=spk_all$all,fill=spk_all$gender))+
geom_histogram(alpha=0.75,position="identity",binwidth = 5)+
coord_cartesian(xlim=c(100,300),ylim=c(0,10))+
labs(title="Turn count per speaker (100<x<300)",x="Number of turns",y="Frequency",fill="Gender")
ggplot(spk_all,aes(x=spk_all$all,fill=spk_all$gender))+
geom_histogram(alpha=0.75,position="identity",binwidth = 5)+
coord_cartesian(xlim=c(300,1500),ylim=c(0,10))+
labs(title="Turn count per speaker (300<x<1500)",x="Number of turns",y="Frequency",fill="Gender")
ggplot(spk_all,aes(x='',y=spk_all$all, fill=spk_all$gender))+geom_boxplot()+
scale_fill_discrete(name="Gender")+
labs(title="Distribution of the number of turn per speaker by gender",x="",y="Turn count per speaker")+
scale_y_log10()
library(reshape2)
gspeakers<-subset(speakers,speakers$gender!="NA")
speakers_long <- melt(gspeakers, id.vars=c("id_speaker","gender"))
ggplot(speakers_long, aes(x=factor(gender),y=value,fill=factor(gender)))+
geom_boxplot() + labs(title="Turn per speaker by corpus",fill="Gender",x="",y="Turn count") +
facet_wrap(~variable)
ggplot(speakers_long, aes(x=factor(gender),y=value,fill=factor(gender)))+
geom_boxplot() + labs(title="Turn count per speaker by corpus",fill="Gender",x="",y="Turn count") +
facet_wrap(~variable)+
coord_cartesian(ylim=c(0,1000))
View(speakers)
count(speaker,gender=="male")
count(speakers,gender=="male")
count(speakers,is.na(gender))
#Tours de paroles
count(speakers$all,gender=="male")
#Tours de paroles
count(speakers$all,speakers$gender=="male")
#Tours de paroles
sum(speakers$all,speakers$gender=="male")
#Tours de paroles
sum(na.exclude(speakers$all[speakers$gender=="male"]))
sum(na.exclude(speakers$all[is.na(speakers$gender)]))
sum(na.exclude(speakers$all[speakers$gender=="female"]))
#Tous corpus confondus
sum(na.exclude(speakers$all[speakers$gender=="male"]))
sum(na.exclude(speakers$all[speakers$gender=="female"]))
sum(na.exclude(speakers$all[is.na(speakers$gender)]))
#ESTER1
sum(na.exclude(speakers$ester1[speakers$gender=="male"]))
sum(na.exclude(speakers$ester1[speakers$gender=="female"]))
sum(na.exclude(speakers$ester1[is.na(speakers$gender)]))
#ESTER2
sum(na.exclude(speakers$ester2[speakers$gender=="male"]))
sum(na.exclude(speakers$ester2[speakers$gender=="female"]))
sum(na.exclude(speakers$ester2[is.na(speakers$gender)]))
#ETAPE
sum(na.exclude(speakers$etape[speakers$gender=="male"]))
sum(na.exclude(speakers$etape[speakers$gender=="female"]))
sum(na.exclude(speakers$etape[is.na(speakers$gender)]))
#REPERE
sum(na.exclude(speakers$repere[speakers$gender=="male"]))
sum(na.exclude(speakers$repere[speakers$gender=="female"]))
sum(na.exclude(speakers$repere[is.na(speakers$gender)]))
count(speakers,gender=="male"&speakers$ester1>0)
count(speakers,gender=="male"&speakers$ester1>0)
count(speakers,gender=="female"&speakers$ester1>0)
count(speakers,is.na(gender)&speakers$ester1>0)
fit<-glm(spk_all$all~spk_all$gender,family=poisson())
summary(fit)
help("write.csv2")
setwd("/home/getalp/garnerim/Bureau/scripts/turn_length")
#install.packages("dplyr")
library(dplyr)
#install.packages("ggplot2")
library(ggplot2)
#install.packages("survival")
library("survival")
library(readr)
#Import des donnÃ©es
turns <- read_delim("~/Bureau/clean_data/turn_length/turns_all_info_id_class.csv",";",
escape_double = FALSE,
col_types = cols(gender = col_factor(levels = c("female", "male")),
id_corpus = col_factor(levels = c("1","2", "3", "4")),
id_speaker_class = col_factor(levels = c("1","2", "3", "4")),
id_episode = col_factor(levels = as.factor(seq(1,675,1))),
id_show = col_factor(levels = as.factor(seq(1,20,1))),
id_speaker = col_factor(levels =as.factor(seq(0,4975,1))),
id_turn = col_character()),
trim_ws = TRUE)
#Calcul du nombre de tours par genre
turns_by_gender=count(turns$gender=="male")
nb_turn_m=turns_by_gender$freq[turns_by_gender$x==TRUE][1]
nb_turn_f=turns_by_gender$freq[turns_by_gender$x==FALSE][1]
nb_turn_u=turns_by_gender$freq[is.na(turns_by_gender$x)][1]
nb_turn = nb_turn_m+nb_turn_f+nb_turn_u
#Calcul de la longueur moyenne d'un tour de parole par genre
mean_length_m <-mean((turns$end_time-turns$start_time)[turns$gender=="male"],na.rm=TRUE)
mean_length_f <-mean((turns$end_time-turns$start_time)[turns$gender=="female"],na.rm=TRUE)
mean_length_u <-mean((turns$end_time-turns$start_time)[is.na(turns$gender)],na.rm=TRUE)
mean_length <-mean((turns$end_time-turns$start_time),na.rm=TRUE)
sd_length_m <-sd((turns$end_time-turns$start_time)[turns$gender=="male"],na.rm=TRUE)
sd_length_f <-sd((turns$end_time-turns$start_time)[turns$gender=="female"],na.rm=TRUE)
sd_length_u <-sd((turns$end_time-turns$start_time)[is.na(turns$gender)],na.rm=TRUE)
sd_length <-sd((turns$end_time-turns$start_time),na.rm=TRUE)
boxplot((turns$end_time-turns$start_time)~turns$gender)
boxplot(log(turns$end_time-turns$start_time)~turns$gender)
#Idem par corpus :
#ESTER1 :
is_e1=count(turns$id_corpus==1)
nb_turns_e1=is_e1$freq[is_e1$x==TRUE][1]
nb_turn_e1_m=count(turns$id_corpus==1&turns$gender=="male")$freq[2]
nb_turn_e1_f=count(turns$id_corpus==1&turns$gender=="female")$freq[2]
nb_turn_e1_u=count(turns$id_corpus==1&is.na(turns$gender))$freq[2]
mean_length_e1_m <-mean((turns$end_time-turns$start_time)[turns$gender=="male"&turns$id_corpus==1],na.rm=TRUE)
mean_length_e1_f <-mean((turns$end_time-turns$start_time)[turns$gender=="female"&turns$id_corpus==1],na.rm=TRUE)
mean_length_e1_u <-mean((turns$end_time-turns$start_time)[is.na(turns$gender)&turns$id_corpus==1],na.rm=TRUE)
mean_length_e1 <-mean((turns$end_time-turns$start_time)[turns$id_corpus==1],na.rm=TRUE)
sd_length_e1_m <-sd((turns$end_time-turns$start_time)[turns$gender=="male"&turns$id_corpus==1],na.rm=TRUE)
sd_length_e1_f <-sd((turns$end_time-turns$start_time)[turns$gender=="female"&turns$id_corpus==1],na.rm=TRUE)
sd_length_e1_u <-sd((turns$end_time-turns$start_time)[is.na(turns$gender)&turns$id_corpus==1],na.rm=TRUE)
sd_length_e1 <-sd((turns$end_time-turns$start_time)[turns$id_corpus==1],na.rm=TRUE)
#ESTER2 :
is_e2=count(turns$id_corpus==2)
nb_turns_e2=is_e2$freq[is_e2$x==TRUE][1]
nb_turn_e2_m=count(turns$id_corpus==2&turns$gender=="male")$freq[2]
nb_turn_e2_f=count(turns$id_corpus==2&turns$gender=="female")$freq[2]
nb_turn_e2_u=count(turns$id_corpus==2&is.na(turns$gender))$freq[2]
mean_length_e2_m <-mean((turns$end_time-turns$start_time)[turns$gender=="male"&turns$id_corpus==2],na.rm=TRUE)
mean_length_e2_f <-mean((turns$end_time-turns$start_time)[turns$gender=="female"&turns$id_corpus==2],na.rm=TRUE)
mean_length_e2_u <-mean((turns$end_time-turns$start_time)[is.na(turns$gender)&turns$id_corpus==2],na.rm=TRUE)
mean_length_e2 <-mean((turns$end_time-turns$start_time)[turns$id_corpus==2],na.rm=TRUE)
sd_length_e2_m <-sd((turns$end_time-turns$start_time)[turns$gender=="male"&turns$id_corpus==2],na.rm=TRUE)
sd_length_e2_f <-sd((turns$end_time-turns$start_time)[turns$gender=="female"&turns$id_corpus==2],na.rm=TRUE)
sd_length_e2_u <-sd((turns$end_time-turns$start_time)[is.na(turns$gender)&turns$id_corpus==2],na.rm=TRUE)
sd_length_e2 <-sd((turns$end_time-turns$start_time)[turns$id_corpus==2],na.rm=TRUE)
#ETAPE :
is_etp=count(turns$id_corpus==3)
nb_turns_etp=is_etp$freq[is_etp$x==TRUE][1]
nb_turn_etp_m=count(turns$id_corpus==3&turns$gender=="male")$freq[2]
nb_turn_etp_f=count(turns$id_corpus==3&turns$gender=="female")$freq[2]
nb_turn_etp_u=count(turns$id_corpus==3&is.na(turns$gender))$freq[2]
mean_length_etp_m <-mean((turns$end_time-turns$start_time)[turns$gender=="male"&turns$id_corpus==3],na.rm=TRUE)
mean_length_etp_f <-mean((turns$end_time-turns$start_time)[turns$gender=="female"&turns$id_corpus==3],na.rm=TRUE)
mean_length_etp_u <-mean((turns$end_time-turns$start_time)[is.na(turns$gender)&turns$id_corpus==3],na.rm=TRUE)
mean_length_etp <-mean((turns$end_time-turns$start_time)[turns$id_corpus==3],na.rm=TRUE)
sd_length_etp_m <-sd((turns$end_time-turns$start_time)[turns$gender=="male"&turns$id_corpus==3],na.rm=TRUE)
sd_length_etp_f <-sd((turns$end_time-turns$start_time)[turns$gender=="female"&turns$id_corpus==3],na.rm=TRUE)
sd_length_etp_u <-sd((turns$end_time-turns$start_time)[is.na(turns$gender)&turns$id_corpus==3],na.rm=TRUE)
sd_length_etp <-sd((turns$end_time-turns$start_time)[turns$id_corpus==3],na.rm=TRUE)
#REPERE :
is_rep=count(turns$id_corpus==4)
nb_turns_rep=is_rep$freq[is_rep$x==TRUE][1]
nb_turn_rep_m=count(turns$id_corpus==4&turns$gender=="male")$freq[2]
nb_turn_rep_f=count(turns$id_corpus==4&turns$gender=="female")$freq[2]
nb_turn_rep_u=count(turns$id_corpus==4&is.na(turns$gender))$freq[2]
mean_length_rep_m <-mean((turns$end_time-turns$start_time)[turns$gender=="male"&turns$id_corpus==4],na.rm=TRUE)
mean_length_rep_f <-mean((turns$end_time-turns$start_time)[turns$gender=="female"&turns$id_corpus==4],na.rm=TRUE)
mean_length_rep_u <-mean((turns$end_time-turns$start_time)[is.na(turns$gender)&turns$id_corpus==4],na.rm=TRUE)
mean_length_rep <-mean((turns$end_time-turns$start_time)[turns$id_corpus==4],na.rm=TRUE)
sd_length_rep_m <-sd((turns$end_time-turns$start_time)[turns$gender=="male"&turns$id_corpus==4],na.rm=TRUE)
sd_length_rep_f <-sd((turns$end_time-turns$start_time)[turns$gender=="female"&turns$id_corpus==4],na.rm=TRUE)
sd_length_rep_u <-sd((turns$end_time-turns$start_time)[is.na(turns$gender)&turns$id_corpus==4],na.rm=TRUE)
sd_length_rep <-sd((turns$end_time-turns$start_time)[turns$id_corpus==4],na.rm=TRUE)
f_means<-c(mean_length_e1_f,mean_length_e2_f,mean_length_etp_f,mean_length_rep_f,mean_length_f)
m_means<-c(mean_length_e1_m,mean_length_e2_m,mean_length_etp_m,mean_length_rep_m,mean_length_m)
u_means<-c(mean_length_e1_u,mean_length_e2_u,mean_length_etp_u,mean_length_rep_u,mean_length_u)
all_means<-c(mean_length_e1,mean_length_e2,mean_length_etp,mean_length_rep,mean_length)
f_sds<-c(sd_length_e1_f,sd_length_e2_f,sd_length_etp_f,sd_length_rep_f,sd_length_f)
m_sds<-c(sd_length_e1_m,sd_length_e2_m,sd_length_etp_m,sd_length_rep_m,sd_length_m)
u_sds<-c(sd_length_e1_u,sd_length_e2_u,sd_length_etp_u,sd_length_rep_u,sd_length_u)
all_sds<-c(sd_length_e1,sd_length_e2,sd_length_etp,sd_length_rep,sd_length)
means<-data.frame(female=f_means,male=m_means,unknown=u_means,all=all_means,row.names = c("ESTER1","ESTER2","ETAPE","REPERE","ALL"))
sds<-data.frame(female=f_sds,male=m_sds,unknown=u_sds,all=all_sds,row.names = c("ESTER1","ESTER2","ETAPE","REPERE","ALL"))
is_e1=count(turns$id_corpus==1)
library(dplyr)
turns_by_gender=count(turns$gender=="male")
turns_by_gender=count(turns,turns$gender=="male")
View(turns_by_gender)
View(turns_by_gender)
nb_turn_m=turns_by_gender$freq[turns_by_gender$x==TRUE][1]
nb_turn_f=turns_by_gender$freq[turns_by_gender$x==FALSE][1]
nb_turn_u=turns_by_gender$freq[is.na(turns_by_gender$x)][1]
View(turns_by_gender)
nb_turn_m=turns_by_gender$n[1]
nb_turn_m
View(turns_by_gender)
nb_turn_m=turns_by_gender$n[1]
nb_turn_f=turns_by_gender$n[2]
nb_turn_u=turns_by_gender$n[3]
nb_turn = count(turns)
mean_length_m <-mean((turns$end_time-turns$start_time)[turns$gender=="male"],na.rm=TRUE)
mean_length_f <-mean((turns$end_time-turns$start_time)[turns$gender=="female"],na.rm=TRUE)
mean_length_u <-mean((turns$end_time-turns$start_time)[is.na(turns$gender)],na.rm=TRUE)
mean_length <-mean((turns$end_time-turns$start_time),na.rm=TRUE)
sd_length_m <-sd((turns$end_time-turns$start_time)[turns$gender=="male"],na.rm=TRUE)
sd_length_f <-sd((turns$end_time-turns$start_time)[turns$gender=="female"],na.rm=TRUE)
sd_length_u <-sd((turns$end_time-turns$start_time)[is.na(turns$gender)],na.rm=TRUE)
sd_length <-sd((turns$end_time-turns$start_time),na.rm=TRUE)
boxplot((turns$end_time-turns$start_time)~turns$gender)
boxplot(log(turns$end_time-turns$start_time)~turns$gender)
nb_turns_e1=count(turns$id_corpus==1)$n[2]
nb_turns_e1=count(turns,turns$id_corpus==1)$n[2]
nb_turn_e1_m=count(turns,turns$id_corpus==1$turns$gender=="male")$n[2]
nb_turn_e1_m=count(turns,turns$id_corpus==1&turns$gender=="male")$n[2]
prin(nb_turn_e1_m)
print(nb_turn_e1_m)
nb_turn_e1_m=count(turns,turns$id_corpus==1&turns$gender=="male")$n[2]
nb_turn_e1_f=count(turns,turns$id_corpus==1&turns$gender=="male")$n[1]
nb_turn_e1_u=count(turns,turns$id_corpus==1&turns$gender=="male")$n[3]
nb_turn_e1_m=count(turns,turns$id_corpus==1&turns$gender=="male")$n[2]
nb_turn_e1_f=count(turns,turns$id_corpus==1&turns$gender=="female")$n[2]
nb_turn_e1_u=count(turns,turns$id_corpus==1&is.na(turns$gender))$n[2]
means<-data.frame(female=f_means,male=m_means,unknown=u_means,all=all_means,row.names = c("ESTER1","ESTER2","ETAPE","REPERE","ALL"))
sds<-data.frame(female=f_sds,male=m_sds,unknown=u_sds,all=all_sds,row.names = c("ESTER1","ESTER2","ETAPE","REPERE","ALL"))
write.csv2(means,"means.csv",quote=F,row.names=F)
